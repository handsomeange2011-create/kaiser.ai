const express = require("express");
const router = express.Router();
const verifyFirebaseToken = require("../middleware/auth");
const admin = require("firebase-admin");
const db = admin.firestore();

/**
 * Middleware: check if the logged-in user is an admin
 */
async function checkAdmin(req, res, next) {
  try {
    const uid = req.user.uid;
    const userDoc = await db.collection("users").doc(uid).get();

    if (!userDoc.exists) {
      return res.status(404).json({ error: "User not found" });
    }

    const userData = userDoc.data();

    if (!userData.isAdmin) {
      return res.status(403).json({ error: "🚫 Access denied. You are not an admin." });
    }

    next(); // ✅ user is admin
  } catch (err) {
    console.error("❌ Admin check error:", err.message);
    res.status(500).json({ error: "Server error" });
  }
}

/**
 * Admin Dashboard
 */
router.get("/dashboard", verifyFirebaseToken, checkAdmin, (req, res) => {
  res.json({ message: "✅ Welcome Admin!", user: req.user });
});

/**
 * Example: Get all users (admin only)
 */
router.get("/users", verifyFirebaseToken, checkAdmin, async (req, res) => {
  try {
    const snapshot = await db.collection("users").get();
    const users = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));

    res.json({ users });
  } catch (err) {
    res.status(500).json({ error: "Failed to fetch users" });
  }
});

module.exports = router;
